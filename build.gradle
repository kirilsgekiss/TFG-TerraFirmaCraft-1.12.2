buildscript {
    repositories {
        mavenCentral()
        maven {
            url = 'https://maven.minecraftforge.net'
        }
        maven {
            url = 'https://repo.spongepowered.org/maven'
        }
        gradlePluginPortal()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3.4'
        classpath 'org.eclipse.jgit:org.eclipse.jgit:5.8.0.202006091008-r'
        classpath 'org.apache.commons:commons-lang3:3.12.0'

        if (project.use_mixins.toBoolean()) {
            classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        }
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

if (project.use_mixins.toBoolean()) {
    apply plugin: 'org.spongepowered.mixin'
}

version = version_major + '.' + version_minor + '.' + version_patch
group = project.maven_group
archivesBaseName = project.archives_base_name

sourceCompatibility = targetCompatibility = '1.8'

compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

minecraft {
    version = '1.12.2-14.23.5.2847'
    runDir = 'run'
    mappings = 'stable_39'
    def args = []
    if (project.use_coremod.toBoolean()) {
        args << '-Dfml.coreMods.load=' + coremod_plugin_class_name
    }
    if (project.use_mixins.toBoolean()) {
        args << '-Dmixin.hotSwap=true'
        args << '-Dmixin.checks.interfaces=true'
        args << '-Dmixin.debug.export=true'
        args << '-Xmx12G'
    }
    clientJvmArgs.addAll(args)
    serverJvmArgs.addAll(args)

    replace "@VERSION@", version
}

repositories {
    maven {
        url = 'https://maven.cleanroommc.com'
    }
    maven {
        url = 'https://repo.spongepowered.org/maven'
    }
    maven {
        url = 'https://cursemaven.com'
    }
}

dependencies {
    if (project.use_assetmover.toBoolean()) {
        compile 'com.cleanroommc:assetmover:2.0'
    }
    if (project.use_mixins.toBoolean()) {
        compile 'zone.rong:mixinbooter:7.0'
    }

    implementation 'org.jetbrains:annotations:23.0.0'

    deobfCompile 'curse.maven:reid-629017:4205759'
    deobfCompile 'curse.maven:codechicken-lib-1-8-242818:2779848'
    deobfCompile 'curse.maven:had-enough-items-557549:4109510'
    deobfCompile 'curse.maven:the-one-probe-245211:2667280'
    deobfCompile 'curse.maven:fluidloggedapi-485654:4128089'
    deobfCompile 'curse.maven:ctm-267602:2915363'

    // deobfCompile 'curse.maven:dramatictrees-637540:4059721'

    compile 'curse.maven:crafttweaker-239197:3935788'

    compileOnly 'curse.maven:hwyla-253449:2568751'

    provided files('libs/gregtech-1.12.2-2.4.5-beta.jar')
}

sourceSets {

    main {
        ext.refMap = 'mixins.' + archives_base_name + '.refmap.json'
    }

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    if (project.use_access_transformer.toBoolean()) {
        rename '(.+_at.cfg)', 'META-INF/$1' // Access Transformers
    }
}

jar {
    manifest {
        def attribute_map = [:]
        if (project.use_coremod.toBoolean()) {
            attribute_map['FMLCorePlugin'] = project.coremod_plugin_class_name
            if (project.include_mod.toBoolean()) {
                attribute_map['FMLCorePluginContainsFMLMod'] = true
                attribute_map['ForceLoadAsMod'] = project.gradle.startParameter.taskNames[0] == "build"
            }
        }
        if (project.use_mixins.toBoolean()) {
            attribute_map['TweakClass'] = 'org.spongepowered.asm.launch.MixinTweaker'
        }
        if (project.use_access_transformer.toBoolean()) {
            attribute_map['FMLAT'] = project.archives_base_name + '_at.cfg'
        }
        attributes(attribute_map)
    }
}
